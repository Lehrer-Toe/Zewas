// Admin Setup Script - Automatische Ersteinrichtung f√ºr Firebase
// Diese Datei wird nur einmal beim ersten Admin-Login ausgef√ºhrt

let setupCompleted = false;

// Setup beim ersten Admin-Login starten
async function checkAndRunSetup() {
    if (currentUser?.role !== 'admin' || setupCompleted) {
        return;
    }
    
    try {
        console.log('üîß Pr√ºfe ob Ersteinrichtung n√∂tig ist...');
        
        // Pr√ºfen ob bereits Daten in Firebase vorhanden sind
        const hasExistingData = await checkExistingFirebaseData();
        
        if (!hasExistingData) {
            console.log('üöÄ Starte Ersteinrichtung...');
            await runInitialSetup();
            console.log('‚úÖ Ersteinrichtung abgeschlossen!');
            
            // Benutzer informieren
            showSetupCompleteMessage();
        } else {
            console.log('‚úÖ System bereits eingerichtet');
        }
        
        setupCompleted = true;
        
    } catch (error) {
        console.error('‚ùå Fehler bei der Ersteinrichtung:', error);
        showSetupErrorMessage(error);
    }
}

// Pr√ºfen ob bereits Daten vorhanden sind
async function checkExistingFirebaseData() {
    try {
        if (!window.FirebaseClient || !window.firebaseInitialized) {
            return true; // Lokaler Modus - keine Setup n√∂tig
        }
        
        // Pr√ºfe ob settings bereits existieren
        const settingsResult = await window.FirebaseClient.load('settings');
        const usersResult = await window.FirebaseClient.load('users');
        
        // Wenn settings und mehr als 1 User existieren, ist Setup bereits erfolgt
        return (settingsResult.success && settingsResult.data?.length > 0) ||
               (usersResult.success && usersResult.data?.length > 1);
               
    } catch (error) {
        console.warn('‚ö†Ô∏è Fehler beim Pr√ºfen vorhandener Daten:', error);
        return true; // Im Zweifel kein Setup ausf√ºhren
    }
}

// Hauptfunktion f√ºr die Ersteinrichtung
async function runInitialSetup() {
    console.log('üìä Erstelle Standard-Daten...');
    
    // 1. App-Einstellungen erstellen
    await createAppSettings();
    
    // 2. Standard-F√§cher erstellen
    await createStandardFaecher();
    
    // 3. Bewertungs-Checkpoints erstellen
    await createBewertungsCheckpoints();
    
    // 4. Brief-Vorlagen erstellen
    await createBriefvorlagen();
    
    // 5. Demo-Themen erstellen
    await createDemoThemen();
    
    // 6. Willkommens-News erstellen
    await createWelcomeNews();
    
    // 7. Demo-Lehrer erstellen (optional)
    await createDemoLehrer();
    
    console.log('üéâ Alle Standard-Daten erstellt!');
}

// App-Einstellungen erstellen
async function createAppSettings() {
    const settings = {
        schuljahr: '2025/26',
        appVersion: '1.0.0',
        lastUpdated: new Date().toISOString(),
        setupCompleted: true,
        setupDate: new Date().toISOString()
    };
    
    await window.FirebaseClient.save('settings', settings, 'app-settings');
    console.log('‚öôÔ∏è App-Einstellungen erstellt');
}

// Standard-F√§cher erstellen
async function createStandardFaecher() {
    const standardFaecher = {
        'D': 'Deutsch',
        'M': 'Mathematik',
        'E': 'Englisch',
        'FR': 'Franz√∂sisch',
        'T': 'Technik',
        'AES': 'AES',
        'G': 'Geschichte',
        'GK': 'Gemeinschaftskunde',
        'BIO': 'Biologie',
        'PH': 'Physik',
        'SP': 'Sport',
        'BK': 'Bildende Kunst',
        'IT': 'Informatik',
        'WBS': 'WBS',
        'REL': 'Religion',
        'ETH': 'Ethik',
        'ALL': 'Allgemein'
    };
    
    await window.FirebaseClient.save('faecher', standardFaecher, 'standard-faecher');
    
    // Lokale Daten auch aktualisieren
    alleFaecherGlobal = standardFaecher;
    
    console.log('üìö Standard-F√§cher erstellt');
}

// Bewertungs-Checkpoints erstellen
async function createBewertungsCheckpoints() {
    const standardCheckpoints = {
        'Fachliches Arbeiten': [
            'Du arbeitest konzentriert und ausdauernd',
            'Du sammelst Informationen zielgerichtet',
            'Du setzt dein Wissen sinnvoll ein',
            'Du denkst kreativ und l√∂sungsorientiert',
            'Du strukturierst deine Arbeit logisch und klar',
            'Du zeigst Verantwortungsbewusstsein beim Arbeiten'
        ],
        'Zusammenarbeit': [
            'Du arbeitest konstruktiv im Team',
            'Du √ºbernimmst Verantwortung in der Gruppe',
            'Du h√∂rst anderen zu und respektierst Meinungen',
            'Du unterst√ºtzt andere aktiv',
            'Du l√∂st Konflikte fair und eigenst√§ndig'
        ],
        'Kommunikation': [
            'Du dr√ºckst dich klar und verst√§ndlich aus',
            'Du h√§ltst Blickkontakt und sprichst sicher',
            'Du kannst Feedback geben und annehmen',
            'Du nimmst aktiv an Gespr√§chen teil',
            'Du kannst Inhalte gut pr√§sentieren'
        ],
        'Eigenst√§ndigkeit': [
            'Du arbeitest selbstst√§ndig und zielgerichtet',
            'Du zeigst Eigeninitiative',
            'Du triffst Entscheidungen und stehst dazu',
            'Du erkennst Probleme und gehst sie an'
        ],
        'Reflexionsf√§higkeit': [
            'Du kannst deine St√§rken und Schw√§chen benennen',
            'Du denkst √ºber deinen Lernprozess nach',
            'Du lernst aus Fehlern und verbesserst dich',
            'Du beschreibst, was gut lief und was nicht'
        ],
        'Pers√∂nlichkeitsentwicklung': [
            'Du zeigst Mut, neue Wege zu gehen',
            'Du bleibst auch bei Schwierigkeiten dran',
            'Du entwickelst dich im Laufe des Projekts sp√ºrbar weiter',
            'Du nutzt R√ºckmeldungen zur Verbesserung'
        ]
    };
    
    await window.FirebaseClient.save('checkpoints', standardCheckpoints, 'bewertungs-checkpoints');
    
    // Lokale Daten aktualisieren
    bewertungsCheckpoints = standardCheckpoints;
    
    console.log('‚úÖ Bewertungs-Checkpoints erstellt');
}

// Brief-Vorlagen erstellen
async function createBriefvorlagen() {
    const standardBriefvorlage = {
        anrede: 'Liebe/r [NAME],\n\nim Rahmen des Projekts "Zeig, was du kannst!" hast du folgende St√§rken gezeigt:',
        schluss: 'Wir gratulieren dir zu diesen Leistungen und freuen uns auf weitere erfolgreiche Projekte.\n\nMit freundlichen Gr√º√üen\nDein Lehrerteam',
        version: '1.0',
        lastUpdated: new Date().toISOString()
    };
    
    await window.FirebaseClient.save('briefvorlagen', standardBriefvorlage, 'standard-vorlage');
    
    // Standard-Formulierungen f√ºr St√§rken
    const standardFormulierungen = {};
    Object.keys(bewertungsCheckpoints).forEach(kategorie => {
        bewertungsCheckpoints[kategorie].forEach((text, index) => {
            const key = `${kategorie}_${index}`;
            standardFormulierungen[key] = text;
        });
    });
    
    await window.FirebaseClient.save('briefvorlagen', standardFormulierungen, 'staerken-formulierungen');
    
    // Lokale Daten aktualisieren
    briefvorlage = standardBriefvorlage;
    staerkenFormulierungen = standardFormulierungen;
    
    console.log('üìù Brief-Vorlagen erstellt');
}

// Demo-Themen erstellen
async function createDemoThemen() {
    const demoThemen = [
        {
            name: 'Klimawandel',
            ersteller: 'System',
            faecher: ['BIO', 'G'],
            beschreibung: 'Untersuchung der Ursachen und Folgen des Klimawandels',
            created: new Date().toISOString()
        },
        {
            name: 'Digitalisierung',
            ersteller: 'System',
            faecher: ['IT', 'ALL'],
            beschreibung: 'Auswirkungen der Digitalisierung auf unsere Gesellschaft',
            created: new Date().toISOString()
        },
        {
            name: 'Nachhaltigkeit',
            ersteller: 'System',
            faecher: ['BIO', 'G', 'WBS'],
            beschreibung: 'Nachhaltige Entwicklung und Umweltschutz',
            created: new Date().toISOString()
        }
    ];
    
    for (const thema of demoThemen) {
        await window.FirebaseClient.save('themen', thema);
    }
    
    // Lokale Daten aktualisieren
    themen = demoThemen;
    
    console.log('üå± Demo-Themen erstellt');
}

// Willkommens-News erstellen
async function createWelcomeNews() {
    const welcomeNews = [
        {
            titel: 'Willkommen!',
            text: 'Willkommen im Bewertungstool "Zeig, was du kannst!" f√ºr das Schuljahr 2025/26. Das System wurde erfolgreich eingerichtet.',
            datum: new Date().toLocaleDateString('de-DE'),
            wichtig: false,
            autor: 'System',
            gelesen: false,
            created: new Date().toISOString()
        },
        {
            titel: 'System bereit',
            text: 'Das Bewertungssystem ist einsatzbereit. Lehrer k√∂nnen jetzt Gruppen erstellen und Sch√ºler bewerten. Als Administrator k√∂nnen Sie Lehrer verwalten und Systemeinstellungen anpassen.',
            datum: new Date().toLocaleDateString('de-DE'),
            wichtig: true,
            autor: 'Administrator',
            gelesen: false,
            created: new Date().toISOString()
        }
    ];
    
    for (const newsItem of welcomeNews) {
        await window.FirebaseClient.save('news', newsItem);
    }
    
    // Lokale Daten aktualisieren
    news = welcomeNews;
    
    console.log('üì∞ Willkommens-News erstellt');
}

// Demo-Lehrer erstellen (optional)
async function createDemoLehrer() {
    const demoLehrer = [
        {
            name: 'Demo Lehrer',
            email: 'demo@schule.de',
            role: 'lehrer',
            created: new Date().toISOString(),
            isDemo: true
        }
    ];
    
    // Nur erstellen wenn Firebase Auth verf√ºgbar ist
    if (window.firebase && window.firebase.auth()) {
        try {
            for (const lehrer of demoLehrer) {
                // Firebase Auth User erstellen (nur in Development)
                if (window.DEVELOPMENT_MODE?.enabled) {
                    console.log('üë®‚Äçüè´ Demo-Lehrer werden in der Produktion manuell erstellt');
                }
                
                // Firestore-Dokument erstellen
                await window.FirebaseClient.save('users', lehrer);
            }
            
            console.log('üë®‚Äçüè´ Demo-Lehrer-Daten erstellt');
        } catch (error) {
            console.warn('‚ö†Ô∏è Demo-Lehrer konnten nicht erstellt werden:', error);
        }
    }
}

// Setup-Abschluss-Nachricht anzeigen
function showSetupCompleteMessage() {
    const modal = document.createElement('div');
    modal.className = 'modal';
    modal.innerHTML = `
        <div class="modal-content">
            <h3>üéâ Ersteinrichtung abgeschlossen!</h3>
            <p>Das System wurde erfolgreich eingerichtet. Folgende Daten wurden erstellt:</p>
            <ul style="text-align: left; margin: 20px 0;">
                <li>‚úÖ Standard-F√§cher definiert</li>
                <li>‚úÖ Bewertungs-Checkpoints erstellt</li>
                <li>‚úÖ Brief-Vorlagen konfiguriert</li>
                <li>‚úÖ Demo-Themen hinzugef√ºgt</li>
                <li>‚úÖ Willkommens-Nachrichten erstellt</li>
            </ul>
            <p><strong>N√§chste Schritte:</strong></p>
            <ol style="text-align: left; margin: 20px 0;">
                <li>Lehrer-Accounts im Tab "Lehrer verwalten" erstellen</li>
                <li>Eigene Themen im entsprechenden Tab hinzuf√ºgen</li>
                <li>Bewertungsvorlagen f√ºr Lehrer konfigurieren</li>
            </ol>
            <div class="modal-buttons">
                <button class="btn btn-success" onclick="this.closest('.modal').remove()">Verstanden</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
}

// Setup-Fehler-Nachricht anzeigen
function showSetupErrorMessage(error) {
    const modal = document.createElement('div');
    modal.className = 'modal';
    modal.innerHTML = `
        <div class="modal-content">
            <h3>‚ö†Ô∏è Setup-Warnung</h3>
            <p>Bei der automatischen Einrichtung ist ein Problem aufgetreten:</p>
            <div style="background: #f8f9fa; padding: 15px; border-radius: 5px; margin: 15px 0; font-family: monospace; font-size: 0.9rem;">
                ${error.message || error}
            </div>
            <p>Das System funktioniert trotzdem, aber Sie m√ºssen m√∂glicherweise einige Einstellungen manuell vornehmen.</p>
            <p><strong>Empfohlene Aktion:</strong></p>
            <ul style="text-align: left;">
                <li>Pr√ºfen Sie die Browser-Konsole (F12) f√ºr Details</li>
                <li>Konfigurieren Sie fehlende Einstellungen manuell</li>
                <li>Bei anhaltenden Problemen: Support kontaktieren</li>
            </ul>
            <div class="modal-buttons">
                <button class="btn btn-danger" onclick="this.closest('.modal').remove()">Verstanden</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
}

// Setup automatisch beim Admin-Login ausf√ºhren
if (typeof window !== 'undefined') {
    // Event-Listener f√ºr Admin-Login
    window.addEventListener('adminLoginSuccess', checkAndRunSetup);
    
    // Fallback: Setup nach kurzer Verz√∂gerung pr√ºfen
    setTimeout(() => {
        if (currentUser?.role === 'admin' && !setupCompleted) {
            checkAndRunSetup();
        }
    }, 2000);
}

console.log('üîß Admin-Setup-System geladen');

// Export f√ºr manuelle Ausf√ºhrung
window.AdminSetup = {
    checkAndRun: checkAndRunSetup,
    runSetup: runInitialSetup,
    createSettings: createAppSettings,
    createFaecher: createStandardFaecher,
    createCheckpoints: createBewertungsCheckpoints,
    createBriefvorlagen: createBriefvorlagen
};
